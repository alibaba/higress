{
  "version": "2.0.0",
  "name": "nginx-lua-converter",
  "description": "Nginx Lua 到 Higress WASM 转换工具集 - 多工具协作链版本",
  "tools": [
    {
      "name": "parse_nginx_config",
      "description": "解析和分析 Nginx 配置文件，识别配置结构和复杂度",
      "inputSchema": {
        "type": "object",
        "properties": {
          "config_content": {
            "type": "string",
            "description": "Nginx 配置文件内容"
          }
        },
        "required": ["config_content"]
      }
    },
    {
      "name": "convert_to_higress",
      "description": "将 Nginx 配置转换为 Higress HTTPRoute 和 Service 资源",
      "inputSchema": {
        "type": "object",
        "properties": {
          "config_content": {
            "type": "string",
            "description": "Nginx 配置文件内容"
          },
          "namespace": {
            "type": "string",
            "description": "目标 Kubernetes 命名空间",
            "default": "default"
          }
        },
        "required": ["config_content"]
      }
    },
    {
      "name": "analyze_lua_plugin",
      "description": "【工具链 1/4】分析 Nginx Lua 插件的兼容性，并生成 AI 代码生成指令。\n\n工作流程：\n1. 使用规则引擎分析 Lua 代码特性\n2. 返回结构化分析结果\n3. 返回 AI 代码生成上下文和提示\n\n后续操作：AI 可以基于分析结果和指令调用 generate_conversion_hints 工具获取转换建议。",
      "inputSchema": {
        "type": "object",
        "properties": {
          "lua_code": {
            "type": "string",
            "description": "Nginx Lua 插件代码"
          }
        },
        "required": ["lua_code"]
      }
    },
    {
      "name": "generate_conversion_hints",
      "description": "【工具链 2/4】基于 Lua 分析结果，生成详细的代码转换提示和映射规则。\n\n输入：analyze_lua_plugin 的结构化分析结果\n输出：\n1. API 映射表（Lua API → Go WASM API）\n2. 详细的代码生成提示词\n3. 最佳实践建议\n4. 示例代码片段\n\n后续操作：AI 根据提示生成 Go WASM 代码。",
      "inputSchema": {
        "type": "object",
        "properties": {
          "analysis_result": {
            "type": "string",
            "description": "analyze_lua_plugin 返回的 JSON 格式分析结果"
          },
          "plugin_name": {
            "type": "string",
            "description": "目标插件名称（小写字母和连字符）"
          }
        },
        "required": ["analysis_result", "plugin_name"]
      }
    },
    {
      "name": "validate_wasm_code",
      "description": "【工具链 3/4】验证生成的 Go WASM 插件代码的正确性。\n\n检查项：\n1. Go 语法正确性\n2. 必要的 import 声明\n3. Higress SDK API 使用规范\n4. 配置结构完整性\n5. 常见错误模式检测\n\n输出：验证报告和改进建议。",
      "inputSchema": {
        "type": "object",
        "properties": {
          "go_code": {
            "type": "string",
            "description": "生成的 Go WASM 插件代码"
          },
          "plugin_name": {
            "type": "string",
            "description": "插件名称"
          }
        },
        "required": ["go_code", "plugin_name"]
      }
    },
    {
      "name": "generate_deployment_config",
      "description": "【工具链 4/4】为验证通过的 WASM 插件生成完整的部署配置。\n\n生成内容：\n1. WasmPlugin YAML 配置\n2. ConfigMap（如需要）\n3. 构建脚本（Makefile/脚本）\n4. 部署说明文档\n5. 测试建议\n\n输出：完整的生产就绪配置包。",
      "inputSchema": {
        "type": "object",
        "properties": {
          "plugin_name": {
            "type": "string",
            "description": "插件名称"
          },
          "go_code": {
            "type": "string",
            "description": "验证通过的 Go 代码"
          },
          "config_schema": {
            "type": "string",
            "description": "配置 JSON Schema（可选）"
          },
          "namespace": {
            "type": "string",
            "description": "部署命名空间",
            "default": "higress-system"
          }
        },
        "required": ["plugin_name", "go_code"]
      }
    },
    {
      "name": "convert_lua_to_wasm",
      "description": "【一键转换】将 Nginx Lua 脚本自动转换为 Higress WASM 插件。\n\n这是原有的一体化工具，内部会自动调用规则引擎完成转换。\n如果需要更精细的控制和 AI 参与，建议使用工具链：\nanalyze_lua_plugin → generate_conversion_hints → (AI生成代码) → validate_wasm_code → generate_deployment_config",
      "inputSchema": {
        "type": "object",
        "properties": {
          "lua_code": {
            "type": "string",
            "description": "要转换的 Nginx Lua 插件代码"
          },
          "plugin_name": {
            "type": "string",
            "description": "生成的 WASM 插件名称 (小写字母和连字符)"
          }
        },
        "required": ["lua_code", "plugin_name"]
      }
    }
  ]
}
