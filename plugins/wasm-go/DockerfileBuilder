# The Dockerfile for wasm-go builder only support amd64 and arm64 yet.
# If you want to build on another architecture, the following information may be helpful.
#
# - arch: amd64 \
#   base image: docker.io/ubuntu
#   go_url: https://golang.google.cn/dl/go1.20.1.linux-amd64.tar.gz"
#   tinygo_url: https://github.com/tinygo-org/tinygo/releases/download/v0.27.0/tinygo_0.27.0_amd64.deb
#
# - arch: arm64
#   base image: docker.io/ubuntu
#   go_url: https://golang.google.cn/dl/go1.20.1.linux-arm64.tar.gz
#   tinygo_url: https://github.com/tinygo-org/tinygo/releases/download/v0.27.0/tinygo_0.27.0_arm64.deb
#
# - arch: armel
#   base image: build yourself
#   go_url: install from source code
#   tinygo_url: build yourself
#
# - arch: i386
#   base image: build yourself
#   go_url: https://dl.google.com/go/go1.20.1.linux-386.tar.gz
#   tinygo_url: build yourself
#
# - arch: mips64el
#   base image: build your self
#   go_url: https://dl.google.com/go/go1.20.1.linux-386.tar.gz
#   tinygo_url: build your self
#
# - arch: ppc64el
#   base image: build your self
#   go_url: https://dl.google.com/go/go1.20.1.linux-ppc64le.tar.gz
#   tinygo_url: build your self
#
# - arch: s390x
#   base image: docker.io/ubuntu
#   go_url: https://dl.google.com/go/go1.20.1.linux-s390x.tar.gz
#   tinygo_url: build your self
#
# - arch: armhf
#   base image: build your self
#   go_url: https://golang.google.cn/dl/go1.20.1.linux-armv6l.tar.gz
#   tinygo_url: https://github.com/tinygo-org/tinygo/releases/download/v0.27.0/tinygo_0.27.0_armhf.deb

ARG BASE_IMAGE=docker.io/ubuntu
FROM $BASE_IMAGE

ARG GO_VERSION
ARG TINYGO_VERSION

LABEL go_version=$GO_VERSION tinygo_version=$TINYGO_VERSION

RUN apt-get update \
  && apt-get install -y wget build-essential \
  && rm -rf /var/lib/apt/lists/*


RUN arch="$(dpkg --print-architecture)"; arch="${arch##*-}"; \
	go_url=; \
    tinygo_url=; \
    go_version=${GO_VERSION:-1.19}; \
    tinygo_version=${TINYGO_VERSION:-0.27.0}; \
    echo "arch:           '$arch'"; \
    echo "go go_version:  '$go_version'"; \
    echo "tinygo_version: '$tinygo_version'"; \
	case "$arch" in \
		'amd64') \
            go_url="https://golang.google.cn/dl/go$go_version.linux-amd64.tar.gz"; \
            tinygo_url="https://github.com/tinygo-org/tinygo/releases/download/v$tinygo_version/tinygo_${tinygo_version}_amd64.deb"; \
			;; \
		'arm64') \
            go_url="https://golang.google.cn/dl/go$go_version.linux-arm64.tar.gz"; \
            tinygo_url="https://github.com/tinygo-org/tinygo/releases/download/v$tinygo_version/tinygo_${tinygo_version}_arm64.deb"; \
			;; \
		*) echo >&2 "error: unsupported architecture '$arch' "; exit 1 ;; \
	esac; \
    echo "go_url: '$go_url'"; \
    echo "tinygo_url: '$tinygo_url'"; \
    wget -O go.tgz "$go_url" --progress=dot:giga; \
    wget -O tinygo.deb "$tinygo_url" --progress=dot:giga; \
    echo "Download complete"; \
    rm -rf /usr/local/go && tar -C /usr/local -xzf go.tgz && rm -rf go.tgz; \
    dpkg -i tinygo.deb && rm -rf tinygo.deb

ENV PATH=$PATH:/usr/local/go/bin:/usr/local/bin
