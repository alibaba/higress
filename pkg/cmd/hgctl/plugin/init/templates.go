// Copyright (c) 2022 Alibaba Group Holding Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package plugininit

var (
	GoMain = `// File generated by hgctl. Modify as required.
// See: https://higress.io/zh-cn/docs/user/wasm-go#2-%E7%BC%96%E5%86%99-maingo-%E6%96%87%E4%BB%B6

package main

import (
	"github.com/tidwall/gjson"
	"github.com/tetratelabs/proxy-wasm-go-sdk/proxywasm"
	"github.com/tetratelabs/proxy-wasm-go-sdk/proxywasm/types"
	"github.com/alibaba/higress/plugins/wasm-go/pkg/wrapper"
)

func main() {
	wrapper.SetCtx(
		"{{ .Name }}",
		wrapper.ParseConfigBy(parseConfig),
		wrapper.ProcessRequestHeadersBy(onHttpRequestHeaders),
	)
}

// @Name {{ .Name }}
// @Category {{ .Category }}
// @Phase {{ .Phase }}
// @Priority {{ .Priority }}
// @Title {{ .I18nType }} {{ .Title }}
// @Description {{ .I18nType }} {{ .Description }}
// @IconUrl {{ .IconUrl }}
// @Version {{ .Version }}
//
// @Contact.name {{ .ContactName }}
// @Contact.url {{ .ContactUrl }}
// @Contact.email {{ .ContactEmail }}
//
// @Example
// firstField: hello
// secondField: world
// @End
//
type HelloWorldConfig struct {
	// @Title 第一个字段
	// @Description 字符串的前半部分
	// @Description en-US The first half of the string
	firstField string ` + "`required:\"true\"`" + `
	// @Title en-US Second Field
	// @Description en-US The second half of the string
	secondField string ` + "`required:\"true\"`" + `
}

func parseConfig(json gjson.Result, config *HelloWorldConfig, log wrapper.Log) error {
	config.firstField = json.Get("firstField").String()
	config.secondField = json.Get("secondField").String()
	return nil
}

func onHttpRequestHeaders(ctx wrapper.HttpContext, config HelloWorldConfig, log wrapper.Log) types.Action {
	err := proxywasm.AddHttpRequestHeader(config.firstField, config.secondField)
	if err != nil {
		log.Critical("failed to set request header")
	}
	return types.ActionContinue
}
`
	// TODO(WeixinX): update wasm go sdk to tinygo 0.28.1, see: https://github.com/alibaba/higress/pull/462
	GoMod = `// File generated by hgctl. Modify as required.

module {{ .Name }}

go 1.19

require (
	github.com/alibaba/higress/plugins/wasm-go v0.0.0-20230726025556-3700ada7e6b6
	github.com/tetratelabs/proxy-wasm-go-sdk v0.19.1-0.20220822060051-f9d179a57f8c
	github.com/tidwall/gjson v1.14.3
)
`

	GitIgnore = `# File generated by hgctl. Modify as required.

*

!/.gitignore

!*.go
!go.sum
!go.mod

!LICENSE
!*.md
!*.yaml
!*.yml

!*/

/out
/test
`

	OptionYAML = `# File generated by hgctl. Modify as required.

version: 1.0.0

build:
  builder: 
    go: 1.19
    tinygo: 0.25.0
    oras: 1.0.0
  input: ./
  output: 
    type: files
    dest: ./out
  docker-auth: ~/.docker/config.json
  model-dir: ./
  model: HelloWorldConfig

test:
  name: wasm-test
  from-path: ./out
  test-path: ./test
  detach: false

install:
  namespace: higress-system
  from-yaml: ./test/plugin-conf.yaml
  # If from-go-project is non-empty, the output type of the build option must be image.
  from-go-project:
`
)
