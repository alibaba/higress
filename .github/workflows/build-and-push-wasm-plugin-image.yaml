name: Build and Push Wasm Plugin Image

on:
  push:
    branches: [ main ]
    tags:
    - "wasm-go-*-*.*.*" # 匹配 wasm-go-{pluginName}-vX.Y.Z 格式的标签
  workflow_dispatch:
    inputs:
      plugin_name:
        description: 'Name of the plugin'
        required: true
        type: string
      version:
        description: 'Version of the plugin (optional, without leading v)'
        required: false
        type: string

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    environment:
      name: image-registry-msg
    env:
      IMAGE_REGISTRY_SERVICE: ${{ vars.IMAGE_REGISTRY_SERVICE || 'higress-registry.cn-hangzhou.cr.aliyuncs.com' }}
      IMAGE_REPOSITORY: ${{ vars.IMAGE_REPOSITORY || 'plugins' }}
    steps:
      - name: Set plugin_name and version from inputs or ref_name
        id: set_vars
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            plugin_name="${{ github.event.inputs.plugin_name }}"
            version="${{ github.event.inputs.version }}"
          else
            ref_name=${{ github.ref_name }}
            plugin_name=${ref_name#*-*-} # 删除插件名前面的字段(wasm-go-)
            plugin_name=${plugin_name%-*} # 删除插件名后面的字段(-vX.Y.Z)
            version=$(echo "$ref_name" | awk -F'v' '{print $2}')
          fi

          echo "PLUGIN_NAME=$plugin_name" >> $GITHUB_ENV
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run a wasm-go-builder
        env: 
          GO_VERSION: 1.19
          TINYGO_VERSION: 0.25.0
          ORAS_VERSION: 1.0.0
          PLUGIN_NAME: ${{ env.PLUGIN_NAME }}
          BUILDER_IMAGE: higress-registry.cn-hangzhou.cr.aliyuncs.com/plugins/wasm-go-builder:go${GO_VERSION}-tinygo${TINYGO_VERSION}-oras${ORAS_VERSION}
        run: |
          docker run -d --name builder -v ${{ github.workspace }}:/workspace -e PLUGIN_NAME=${{ env.PLUGIN_NAME }} --rm ${{ env.BUILDER_IMAGE }} sleep 99999

      - name: Build Image and Push
        run: |
          echo ${{ github.workspace }}
          commands="
          cd /workspace/plugins/wasm-go/extensions/${PLUGIN_NAME}
          go mod tidy;
          tinygo build -o ./plugin.wasm -scheduler=none -target=wasi ./main.go
          tar czvf plugin.tar.gz /workspace/plugins/wasm-go/extensions/${PLUGIN_NAME}/plugin.wasm
          echo ${{ secrets.REGISTRY_PASSWORD }} | oras login -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin ${{ env.IMAGE_REGISTRY_SERVICE }}
          oras push ${IMAGE_REGISTRY_SERVICE}/${IMAGE_REPOSITORY}:${{ env.VERSION }} \
              ./README.md:application/vnd.module.wasm.doc.v1+markdown \
              ./README_EN.md:application/vnd.module.wasm.doc.v1.en+markdown \
              ./plugin.tar.gz:application/vnd.oci.image.layer.v1.tar+gzip
          "
          docker exec builder bash -c "$commands"

          
