// Copyright (c) 2022 Alibaba Group Holding Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: networking/v1/http_2_rpc.proto

// $schema: higress.networking.v1.Http2Rpc
// $title: Http2Rpc
// $description: Configuration affecting service discovery from multi registries
// $mode: none

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// <!-- crd generation tags
// +cue-gen:Http2Rpc:groupName:networking.higress.io
// +cue-gen:Http2Rpc:version:v1
// +cue-gen:Http2Rpc:storageVersion
// +cue-gen:Http2Rpc:annotations:helm.sh/resource-policy=keep
// +cue-gen:Http2Rpc:subresource:status
// +cue-gen:Http2Rpc:scope:Namespaced
// +cue-gen:Http2Rpc:resource:categories=higress-io,plural=http2rpcs
// +cue-gen:Http2Rpc:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=networking.higress.io/v1
// +genclient
// +k8s:deepcopy-gen=true
// -->
type Http2Rpc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Destination:
	//
	//	*Http2Rpc_Dubbo
	//	*Http2Rpc_Grpc
	Destination isHttp2Rpc_Destination `protobuf_oneof:"destination"`
}

func (x *Http2Rpc) Reset() {
	*x = Http2Rpc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networking_v1_http_2_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Http2Rpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http2Rpc) ProtoMessage() {}

func (x *Http2Rpc) ProtoReflect() protoreflect.Message {
	mi := &file_networking_v1_http_2_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Http2Rpc.ProtoReflect.Descriptor instead.
func (*Http2Rpc) Descriptor() ([]byte, []int) {
	return file_networking_v1_http_2_rpc_proto_rawDescGZIP(), []int{0}
}

func (m *Http2Rpc) GetDestination() isHttp2Rpc_Destination {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (x *Http2Rpc) GetDubbo() *DubboService {
	if x, ok := x.GetDestination().(*Http2Rpc_Dubbo); ok {
		return x.Dubbo
	}
	return nil
}

func (x *Http2Rpc) GetGrpc() *GrpcService {
	if x, ok := x.GetDestination().(*Http2Rpc_Grpc); ok {
		return x.Grpc
	}
	return nil
}

type isHttp2Rpc_Destination interface {
	isHttp2Rpc_Destination()
}

type Http2Rpc_Dubbo struct {
	Dubbo *DubboService `protobuf:"bytes,1,opt,name=dubbo,proto3,oneof"`
}

type Http2Rpc_Grpc struct {
	Grpc *GrpcService `protobuf:"bytes,2,opt,name=grpc,proto3,oneof"`
}

func (*Http2Rpc_Dubbo) isHttp2Rpc_Destination() {}

func (*Http2Rpc_Grpc) isHttp2Rpc_Destination() {}

type DubboService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string    `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Version string    `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Group   string    `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Methods []*Method `protobuf:"bytes,4,rep,name=methods,proto3" json:"methods,omitempty"`
}

func (x *DubboService) Reset() {
	*x = DubboService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networking_v1_http_2_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DubboService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DubboService) ProtoMessage() {}

func (x *DubboService) ProtoReflect() protoreflect.Message {
	mi := &file_networking_v1_http_2_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DubboService.ProtoReflect.Descriptor instead.
func (*DubboService) Descriptor() ([]byte, []int) {
	return file_networking_v1_http_2_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *DubboService) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *DubboService) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DubboService) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *DubboService) GetMethods() []*Method {
	if x != nil {
		return x.Methods
	}
	return nil
}

type Method struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceMethod       string               `protobuf:"bytes,1,opt,name=service_method,json=serviceMethod,proto3" json:"service_method,omitempty"`
	HeadersAttach       string               `protobuf:"bytes,2,opt,name=headers_attach,json=headersAttach,proto3" json:"headers_attach,omitempty"`
	HttpPath            string               `protobuf:"bytes,3,opt,name=http_path,json=httpPath,proto3" json:"http_path,omitempty"`
	HttpMethods         []string             `protobuf:"bytes,4,rep,name=http_methods,json=httpMethods,proto3" json:"http_methods,omitempty"`
	Params              []*Param             `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty"`
	ParamFromEntireBody *ParamFromEntireBody `protobuf:"bytes,6,opt,name=paramFromEntireBody,proto3" json:"paramFromEntireBody,omitempty"`
}

func (x *Method) Reset() {
	*x = Method{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networking_v1_http_2_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Method) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Method) ProtoMessage() {}

func (x *Method) ProtoReflect() protoreflect.Message {
	mi := &file_networking_v1_http_2_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Method.ProtoReflect.Descriptor instead.
func (*Method) Descriptor() ([]byte, []int) {
	return file_networking_v1_http_2_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *Method) GetServiceMethod() string {
	if x != nil {
		return x.ServiceMethod
	}
	return ""
}

func (x *Method) GetHeadersAttach() string {
	if x != nil {
		return x.HeadersAttach
	}
	return ""
}

func (x *Method) GetHttpPath() string {
	if x != nil {
		return x.HttpPath
	}
	return ""
}

func (x *Method) GetHttpMethods() []string {
	if x != nil {
		return x.HttpMethods
	}
	return nil
}

func (x *Method) GetParams() []*Param {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Method) GetParamFromEntireBody() *ParamFromEntireBody {
	if x != nil {
		return x.ParamFromEntireBody
	}
	return nil
}

type Param struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParamSource string `protobuf:"bytes,1,opt,name=param_source,json=paramSource,proto3" json:"param_source,omitempty"`
	ParamKey    string `protobuf:"bytes,2,opt,name=param_key,json=paramKey,proto3" json:"param_key,omitempty"`
	ParamType   string `protobuf:"bytes,3,opt,name=param_type,json=paramType,proto3" json:"param_type,omitempty"`
}

func (x *Param) Reset() {
	*x = Param{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networking_v1_http_2_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Param) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Param) ProtoMessage() {}

func (x *Param) ProtoReflect() protoreflect.Message {
	mi := &file_networking_v1_http_2_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Param.ProtoReflect.Descriptor instead.
func (*Param) Descriptor() ([]byte, []int) {
	return file_networking_v1_http_2_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *Param) GetParamSource() string {
	if x != nil {
		return x.ParamSource
	}
	return ""
}

func (x *Param) GetParamKey() string {
	if x != nil {
		return x.ParamKey
	}
	return ""
}

func (x *Param) GetParamType() string {
	if x != nil {
		return x.ParamType
	}
	return ""
}

type ParamFromEntireBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParamType string `protobuf:"bytes,1,opt,name=param_type,json=paramType,proto3" json:"param_type,omitempty"`
}

func (x *ParamFromEntireBody) Reset() {
	*x = ParamFromEntireBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networking_v1_http_2_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamFromEntireBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamFromEntireBody) ProtoMessage() {}

func (x *ParamFromEntireBody) ProtoReflect() protoreflect.Message {
	mi := &file_networking_v1_http_2_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamFromEntireBody.ProtoReflect.Descriptor instead.
func (*ParamFromEntireBody) Descriptor() ([]byte, []int) {
	return file_networking_v1_http_2_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *ParamFromEntireBody) GetParamType() string {
	if x != nil {
		return x.ParamType
	}
	return ""
}

type GrpcService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GrpcService) Reset() {
	*x = GrpcService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_networking_v1_http_2_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcService) ProtoMessage() {}

func (x *GrpcService) ProtoReflect() protoreflect.Message {
	mi := &file_networking_v1_http_2_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcService.ProtoReflect.Descriptor instead.
func (*GrpcService) Descriptor() ([]byte, []int) {
	return file_networking_v1_http_2_rpc_proto_rawDescGZIP(), []int{5}
}

var File_networking_v1_http_2_rpc_proto protoreflect.FileDescriptor

var file_networking_v1_http_2_rpc_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f,
	0x68, 0x74, 0x74, 0x70, 0x5f, 0x32, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x15, 0x68, 0x69, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x01, 0x0a, 0x08, 0x48, 0x74, 0x74,
	0x70, 0x32, 0x52, 0x70, 0x63, 0x12, 0x3b, 0x0a, 0x05, 0x64, 0x75, 0x62, 0x62, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x69, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x75, 0x62,
	0x62, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x05, 0x64, 0x75, 0x62,
	0x62, 0x6f, 0x12, 0x38, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x68, 0x69, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x42, 0x0d, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa5, 0x01, 0x0a, 0x0c,
	0x44, 0x75, 0x62, 0x62, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x69, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x22, 0xc3, 0x02, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2a,
	0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2a, 0x0a, 0x0e, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x20, 0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08,
	0x68, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x68, 0x69, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x61, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x46,
	0x72, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x69, 0x72, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x69, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x69, 0x72, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x13, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x45,
	0x6e, 0x74, 0x69, 0x72, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x75, 0x0a, 0x05, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x39, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x6e, 0x74,
	0x69, 0x72, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x47,
	0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x69, 0x62, 0x61, 0x62, 0x61,
	0x2f, 0x68, 0x69, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_networking_v1_http_2_rpc_proto_rawDescOnce sync.Once
	file_networking_v1_http_2_rpc_proto_rawDescData = file_networking_v1_http_2_rpc_proto_rawDesc
)

func file_networking_v1_http_2_rpc_proto_rawDescGZIP() []byte {
	file_networking_v1_http_2_rpc_proto_rawDescOnce.Do(func() {
		file_networking_v1_http_2_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_networking_v1_http_2_rpc_proto_rawDescData)
	})
	return file_networking_v1_http_2_rpc_proto_rawDescData
}

var file_networking_v1_http_2_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_networking_v1_http_2_rpc_proto_goTypes = []interface{}{
	(*Http2Rpc)(nil),            // 0: higress.networking.v1.Http2Rpc
	(*DubboService)(nil),        // 1: higress.networking.v1.DubboService
	(*Method)(nil),              // 2: higress.networking.v1.Method
	(*Param)(nil),               // 3: higress.networking.v1.Param
	(*ParamFromEntireBody)(nil), // 4: higress.networking.v1.ParamFromEntireBody
	(*GrpcService)(nil),         // 5: higress.networking.v1.GrpcService
}
var file_networking_v1_http_2_rpc_proto_depIdxs = []int32{
	1, // 0: higress.networking.v1.Http2Rpc.dubbo:type_name -> higress.networking.v1.DubboService
	5, // 1: higress.networking.v1.Http2Rpc.grpc:type_name -> higress.networking.v1.GrpcService
	2, // 2: higress.networking.v1.DubboService.methods:type_name -> higress.networking.v1.Method
	3, // 3: higress.networking.v1.Method.params:type_name -> higress.networking.v1.Param
	4, // 4: higress.networking.v1.Method.paramFromEntireBody:type_name -> higress.networking.v1.ParamFromEntireBody
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_networking_v1_http_2_rpc_proto_init() }
func file_networking_v1_http_2_rpc_proto_init() {
	if File_networking_v1_http_2_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_networking_v1_http_2_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Http2Rpc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networking_v1_http_2_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DubboService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networking_v1_http_2_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Method); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networking_v1_http_2_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Param); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networking_v1_http_2_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamFromEntireBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_networking_v1_http_2_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_networking_v1_http_2_rpc_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Http2Rpc_Dubbo)(nil),
		(*Http2Rpc_Grpc)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_networking_v1_http_2_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_networking_v1_http_2_rpc_proto_goTypes,
		DependencyIndexes: file_networking_v1_http_2_rpc_proto_depIdxs,
		MessageInfos:      file_networking_v1_http_2_rpc_proto_msgTypes,
	}.Build()
	File_networking_v1_http_2_rpc_proto = out.File
	file_networking_v1_http_2_rpc_proto_rawDesc = nil
	file_networking_v1_http_2_rpc_proto_goTypes = nil
	file_networking_v1_http_2_rpc_proto_depIdxs = nil
}
